// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleSportsSandbox;

namespace PeopleSportsSandbox.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210518194011_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PeopleSportsSandbox.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PeopleSportsSandbox.Sports", b =>
                {
                    b.Property<string>("Sport")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Sport");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            Sport = "Football"
                        },
                        new
                        {
                            Sport = "Soccer"
                        },
                        new
                        {
                            Sport = "Baseball"
                        },
                        new
                        {
                            Sport = "Basketball"
                        },
                        new
                        {
                            Sport = "Tennis"
                        },
                        new
                        {
                            Sport = "Golf"
                        },
                        new
                        {
                            Sport = "Hockey"
                        });
                });

            modelBuilder.Entity("PersonSports", b =>
                {
                    b.Property<int>("PeoplePersonID")
                        .HasColumnType("int");

                    b.Property<string>("SportsSport")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PeoplePersonID", "SportsSport");

                    b.HasIndex("SportsSport");

                    b.ToTable("PersonSports");
                });

            modelBuilder.Entity("PersonSports", b =>
                {
                    b.HasOne("PeopleSportsSandbox.Person", null)
                        .WithMany()
                        .HasForeignKey("PeoplePersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeopleSportsSandbox.Sports", null)
                        .WithMany()
                        .HasForeignKey("SportsSport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
